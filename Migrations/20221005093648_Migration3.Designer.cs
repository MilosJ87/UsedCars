// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsedCars.DbContexts;

#nullable disable

namespace UsedCars.Migrations
{
    [DbContext(typeof(UsedCarsContext))]
    [Migration("20221005093648_Migration3")]
    partial class Migration3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdditionalEquipmentVehicle", b =>
                {
                    b.Property<Guid>("AdditionalEquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VehiclesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AdditionalEquipmentId", "VehiclesId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("AdditionalEquipmentVehicle");
                });

            modelBuilder.Entity("UsedCars.Entities.AdditionalEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdditionalEquipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18a56916-1766-48f9-a0fe-3c278cb32b69"),
                            Name = "ABS"
                        });
                });

            modelBuilder.Entity("UsedCars.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3535afcd-d127-465f-bd18-3159eae20008"),
                            Name = "Audi",
                            VehicleId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35")
                        });
                });

            modelBuilder.Entity("UsedCars.Entities.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9be362f3-3d92-4aa0-9417-529c1d9edcac"),
                            Name = "S3",
                            VehicleId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35")
                        });
                });

            modelBuilder.Entity("UsedCars.Entities.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7bff014-7082-4545-bae9-d86b813e55ad"),
                            Name = "Passenger Car",
                            VehicleId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35")
                        });
                });

            modelBuilder.Entity("UsedCars.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Name = "Auto"
                        });
                });

            modelBuilder.Entity("AdditionalEquipmentVehicle", b =>
                {
                    b.HasOne("UsedCars.Entities.AdditionalEquipment", null)
                        .WithMany()
                        .HasForeignKey("AdditionalEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsedCars.Entities.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehiclesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsedCars.Entities.Brand", b =>
                {
                    b.HasOne("UsedCars.Entities.Vehicle", "Vehicle")
                        .WithOne("Brand")
                        .HasForeignKey("UsedCars.Entities.Brand", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("UsedCars.Entities.Model", b =>
                {
                    b.HasOne("UsedCars.Entities.Vehicle", "Vehicle")
                        .WithOne("Model")
                        .HasForeignKey("UsedCars.Entities.Model", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("UsedCars.Entities.Type", b =>
                {
                    b.HasOne("UsedCars.Entities.Vehicle", "Vehicle")
                        .WithOne("Type")
                        .HasForeignKey("UsedCars.Entities.Type", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("UsedCars.Entities.Vehicle", b =>
                {
                    b.Navigation("Brand")
                        .IsRequired();

                    b.Navigation("Model")
                        .IsRequired();

                    b.Navigation("Type")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
