ƒ 
WF:\Projects\UsedCars\UsedCars.Repository\AdditionalEquipment\AdditionalEquipmentRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{		 
public

 

class

 #
AdditionalEquipmentRepo

 (
:

) *
GenericRepository

+ <
<

< =
Entities

= E
.

E F
AdditionalEquipment

F Y
>

Y Z
,

Z [
IAdditionalService

\ n
{ 
public #
AdditionalEquipmentRepo &
(& '
UsedCarsContext' 6
context7 >
)> ?
:@ A
baseB F
(F G
contextG N
)N O
{ 	
} 	
public 
bool %
AdditionalEquipmentExists -
(- .
Guid. 2
id3 5
)5 6
{ 	
return 
_context 
.  
AdditionalEquipments 0
.0 1
Any1 4
(4 5
x5 6
=>7 9
x: ;
.; <
Id< >
==? A
idB D
)D E
;E F
} 	
public 
ICollection 
< 
AdditionalEquipment .
>. /!
GetEquipmentByVehicle0 E
(E F
GuidF J
	vehicleIdK T
)T U
{ 	
return 
_context 
. 
VehicleEquipments .
.. /
Where/ 4
(4 5
p5 6
=>7 9
p: ;
.; <
Vehicle< C
.C D
IdD F
==G I
	vehicleIdJ S
)S T
.T U
SelectU [
([ \
o\ ]
=>^ `
oa b
.b c
AdditionalEquipmentc v
)v w
.w x
ToListx ~
(~ 
)	 Ä
;
Ä Å
} 	
public 
void %
CreateVehicleForEquipment -
(- .
Guid. 2!
additionalEquipmentId3 H
,H I
VehicleJ Q
vehicleR Y
)Y Z
{ 	
var "
vehicleEquipmentEntity &
=' (
_context) 1
.1 2 
AdditionalEquipments2 F
.F G
WhereG L
(L M
aM N
=>O Q
aR S
.S T
IdT V
==W Y!
additionalEquipmentIdZ o
)o p
.p q
FirstOrDefaultq 
(	 Ä
)
Ä Å
;
Å Ç
var 
vehicleEquipment  
=! "
new# &
VehicleEquipment' 7
(7 8
)8 9
{ 
AdditionalEquipment #
=$ %"
vehicleEquipmentEntity& <
,< =
Vehicle 
= 
vehicle !
}   
;   
_context"" 
."" 
Add"" 
("" 
vehicleEquipment"" )
)"") *
;""* +
_context## 
.## 
Add## 
(## 
vehicle##  
)##  !
;##! "
_context$$ 
.$$ 
SaveChanges$$  
($$  !
)$$! "
;$$" #
}'' 	
public(( 
ICollection(( 
<(( 
Vehicle(( "
>((" #!
GetVehicleByEquipment(($ 9
(((9 :
Guid((: >!
additionalEquipmentId((? T
)((T U
{)) 	
return** 
_context** 
.** 
VehicleEquipments** .
.**. /
Where**/ 4
(**4 5
p**5 6
=>**7 9
p**: ;
.**; <
AdditionalEquipment**< O
.**O P
Id**P R
==**S U!
additionalEquipmentId**V k
)**k l
.**l m
Select**m s
(**s t
c**t u
=>**v x
c**y z
.**z {
Vehicle	**{ Ç
)
**Ç É
.
**É Ñ
ToList
**Ñ ä
(
**ä ã
)
**ã å
;
**å ç
}++ 	
}-- 
}.. Â	
XF:\Projects\UsedCars\UsedCars.Repository\AdditionalEquipment\IAdditionalEquipmentRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

	interface 
IAdditionalService '
:( )
IGenericRepository* <
<< =
Entities= E
.E F
AdditionalEquipmentF Y
>Y Z
{ 
bool %
AdditionalEquipmentExists &
(& '
Guid' +
id, .
). /
;/ 0
void		 %
CreateVehicleForEquipment		 &
(		& '
Guid		' +!
additionalEquipmentId		, A
,		A B
Vehicle		C J
vehicle		K R
)		R S
;		S T
ICollection

 
<

 
Entities

 
.

 
AdditionalEquipment

 0
>

0 1!
GetEquipmentByVehicle

2 G
(

G H
Guid

H L
	vehicleId

M V
)

V W
;

W X
ICollection 
< 
Vehicle 
> !
GetVehicleByEquipment 2
(2 3
Guid3 7!
additionalEquipmentId8 M
)M N
;N O
} 
} ⁄
AF:\Projects\UsedCars\UsedCars.Repository\Category\CategoryRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

class 
CategoryRepo 
: 
GenericRepository  1
<1 2
Entities2 :
.: ;
Category; C
>C D
,D E
ICategoryRepoF S
{		 
public

 
CategoryRepo

 
(

 
UsedCarsContext

 +
context

, 3
)

3 4
:

5 6
base

7 ;
(

; <
context

< C
)

C D
{ 	
} 	
public 
bool 
CategoryExsits "
(" #
Guid# '
id( *
)* +
{ 	
return 
_context 
. 

Categories &
.& '
Any' *
(* +
c+ ,
=>- /
c0 1
.1 2
Id2 4
==5 7
id8 :
): ;
;; <
} 	
} 
} ô
BF:\Projects\UsedCars\UsedCars.Repository\Category\ICategoryRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

	interface 
ICategoryRepo "
:# $
IGenericRepository% 7
<7 8
Entities8 @
.@ A
CategoryA I
>I J
{ 
bool 
CategoryExsits 
( 
Guid  
id! #
)# $
;$ %
}

 
} ˛*
OF:\Projects\UsedCars\UsedCars.Repository\GenericRepository\GenericRepository.cs
	namespace 	
UsedCars
 
. 
GenericRepository $
{ 
public 

class 
GenericRepository "
<" #
T# $
>$ %
:& '
IGenericRepository( :
<: ;
T; <
>< =
where> C
TD E
:F G
classH M
{ 
private		 
	protected		 
UsedCarsContext		 )
_context		* 2
=		3 4
null		5 9
;		9 :
private

 
readonly

 
DbSet

 
<

 
T

  
>

  !
	_entities

" +
=

, -
null

. 2
;

2 3
public 
GenericRepository  
(  !
UsedCarsContext! 0
context1 8
)8 9
{ 	
this 
. 
_context 
= 
context #
??$ &
throw' ,
new- 0!
ArgumentNullException1 F
(F G
nameofG M
(M N
contextN U
)U V
)V W
;W X
	_entities 
= 
_context  
.  !
Set! $
<$ %
T% &
>& '
(' (
)( )
;) *
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
T& '
>' (
>( )
GetAllAsync* 5
(5 6
)6 7
{ 	
return 
await 
	_entities "
." #
ToListAsync# .
(. /
)/ 0
;0 1
} 	
public 
async 
Task 
< 
T 
> 
GetById $
($ %
object% +
id, .
). /
{ 	
return 
	_entities 
. 
Find "
(" #
id# %
)% &
;& '
} 	
public 
void 
Insert 
( 
T 
obj  
)  !
{ 	
	_entities 
. 
Add 
( 
obj 
) 
; 
} 	
public 
virtual 
async 
Task !
<! "
T" #
># $
InsertAsync% 0
(0 1
T1 2
TEntity3 :
): ;
{ 	
_context 
. 
Set 
< 
T 
> 
( 
) 
. 
Add !
(! "
TEntity" )
)) *
;* +
await   
_context   
.   
SaveChangesAsync   +
(  + ,
)  , -
;  - .
return!! 
TEntity!! 
;!! 
}## 	
public%% 
void%% 
Update%% 
(%% 
T%% 
obj%%  
)%%  !
{&& 	
	_entities'' 
.'' 
Attach'' 
('' 
obj''  
)''  !
;''! "
_context(( 
.(( 
Entry(( 
((( 
obj(( 
)(( 
.((  
State((  %
=((& '
EntityState((( 3
.((3 4
Modified((4 <
;((< =
})) 	
public++ 
virtual++ 
async++ 
Task++ !
UpdateAsync++" -
(++- .
T++. /
obj++0 3
)++3 4
{,, 	
	_entities-- 
.-- 
Attach-- 
(-- 
obj--  
)--  !
;--! "
_context.. 
... 
Entry.. 
(.. 
obj.. 
).. 
...  
State..  %
=..& '
EntityState..( 3
...3 4
Modified..4 <
;..< =
await// 
_context// 
.// 
SaveChangesAsync// +
(//+ ,
)//, -
;//- .
}11 	
public44 
async44 
Task44 
<44 
int44 
>44 
Delete44 %
(44% &
object44& ,
id44- /
)44/ 0
{55 	
T66 
existing66 
=66 
	_entities66 "
.66" #
Find66# '
(66' (
id66( *
)66* +
;66+ ,
	_entities77 
.77 
Remove77 
(77 
existing77 %
)77% &
;77& '
return88 
await88 
_context88 !
.88! "
SaveChangesAsync88" 2
(882 3
)883 4
;884 5
}99 	
public;; 
void;; 
Save;; 
(;; 
);; 
=>;; 
_context;; &
.;;& '
SaveChanges;;' 2
(;;2 3
);;3 4
;;;4 5
public== 
virtual== 
async== 
Task== !
<==! "
int==" %
>==% &
	SaveAsync==' 0
(==0 1
)==1 2
=>==3 5
await==6 ;
_context==< D
.==D E
SaveChangesAsync==E U
(==U V
)==V W
;==W X
}>> 
}?? Ã

PF:\Projects\UsedCars\UsedCars.Repository\GenericRepository\IGenericRepository.cs
	namespace 	
UsedCars
 
. 
GenericRepository $
{ 
public 

	interface 
IGenericRepository '
<' (
T( )
>) *
where+ 0
T1 2
:3 4
class5 :
{ 
Task 
< 
int 
> 
Delete 
( 
object 
id  "
)" #
;# $
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
Task 
< 
T 
> 
GetById 
( 
object 
id !
)! "
;" #
Task 
< 
T 
> 
InsertAsync 
( 
T 
TEntity %
)% &
;& '
Task		 
<		 
int		 
>		 
	SaveAsync		 
(		 
)		 
;		 
Task

 
UpdateAsync

 
(

 
T

 
obj

 
)

 
;

  
} 
} Ÿ
:F:\Projects\UsedCars\UsedCars.Repository\Make\IMakeRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

	interface 
	IMakeRepo 
:  
IGenericRepository! 3
<3 4
Entities4 <
.< =
Make= A
>A B
{ 
void 
Dispose 
( 
) 
; 
bool 

MakeExists 
( 
Guid 
id 
)  
;  !
}		 
}

 √
9F:\Projects\UsedCars\UsedCars.Repository\Make\MakeRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

class 
MakeRepo 
: 
GenericRepository -
<- .
Entities. 6
.6 7
Make7 ;
>; <
,< =
IDisposable> I
,I J
	IMakeRepoK T
{		 
public

 
MakeRepo

 
(

 
UsedCarsContext

 '
context

( /
)

/ 0
:

1 2
base

3 7
(

7 8
context

8 ?
)

? @
{ 	
} 	
public 
bool 

MakeExists 
( 
Guid #
id$ &
)& '
{ 	
return 
_context 
. 
Makes !
.! "
Any" %
(% &
c& '
=>( *
c+ ,
., -
Id- /
==0 2
id3 5
)5 6
;6 7
} 	
public 
void 
Dispose 
( 
) 
{ 	
Dispose 
( 
true 
) 
; 
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
	protected 
virtual 
void 
Dispose &
(& '
bool' +
	disposing, 5
)5 6
{ 	
if 
( 
	disposing 
) 
{ 
} 
} 	
} 
} π
<F:\Projects\UsedCars\UsedCars.Repository\Model\IModelRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

	interface 

IModelRepo 
:  !
IGenericRepository" 4
<4 5
Model5 :
>: ;
{ 
void 
Dispose 
( 
) 
; 
bool		 
ModelExists		 
(		 
Guid		 
id		  
)		  !
;		! "
}

 
} £
;F:\Projects\UsedCars\UsedCars.Repository\Model\ModelRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

class 
	ModelRepo 
: 
GenericRepository .
<. /
Entities/ 7
.7 8
Model8 =
>= >
,> ?

IModelRepo@ J
{		 
public

 
	ModelRepo

 
(

 
UsedCarsContext

 (
context

) 0
)

0 1
:

2 3
base

4 8
(

8 9
context

9 @
)

@ A
{ 	
} 	
public 
bool 
ModelExists 
(  
Guid  $
id% '
)' (
{ 	
return 
_context 
. 
Models "
." #
Any# &
(& '
x' (
=>) +
x, -
.- .
Id. 0
==1 3
id4 6
)6 7
;7 8
} 	
public 
void 
Dispose 
( 
) 
{ 	
Dispose 
( 
true 
) 
; 
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
	protected 
virtual 
void 
Dispose &
(& '
bool' +
	disposing, 5
)5 6
{ 	
if 
( 
	disposing 
) 
{ 
} 
} 	
} 
}   õ
@F:\Projects\UsedCars\UsedCars.Repository\Vehicle\IVehicleRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{ 
public 

	interface 
IVehicleRepo !
:" #
IGenericRepository$ 6
<6 7
Entities7 ?
.? @
Vehicle@ G
>G H
{ 
bool 
VehicleExists 
( 
Guid 
	vehicleId  )
)) *
;* +
} 
}		 √
?F:\Projects\UsedCars\UsedCars.Repository\Vehicle\VehicleRepo.cs
	namespace 	
UsedCars
 
. 

Repository 
{		 
public

 

class

 
VehicleRepo

 
:

 
GenericRepository

 0
<

0 1
Entities

1 9
.

9 :
Vehicle

: A
>

A B
,

B C
IVehicleRepo

D P
{ 
public 
VehicleRepo 
( 
UsedCarsContext *
context+ 2
)2 3
:4 5
base6 :
(: ;
context; B
)B C
{ 	
} 	
public11 
bool11 
VehicleExists11 !
(11! "
Guid11" &
	vehicleId11' 0
)110 1
{22 	
if33 
(33 
	vehicleId33 
==33 
Guid33 !
.33! "
Empty33" '
)33' (
{44 
throw55 
new55 !
ArgumentNullException55 /
(55/ 0
nameof550 6
(556 7
	vehicleId557 @
)55@ A
)55A B
;55B C
}66 
return88 
_context88 
.88 
Vehicles88 $
.88$ %
Any88% (
(88( )
c88) *
=>88+ -
c88. /
.88/ 0
Id880 2
==883 5
	vehicleId886 ?
)88? @
;88@ A
}99 	
};; 
}<< 